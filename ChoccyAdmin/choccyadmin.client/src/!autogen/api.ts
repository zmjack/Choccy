/* Generated by TypeSharpV3 dev-version */
declare var $ts_handle_response: (response: Response) => any;
declare var $ts_handle_error: (reason: any) => any;

export namespace Ajax {
  export interface JSend<TData> {
    status?: string;
    data?: TData;
    exData?: any;
    message?: string;
    code?: string;
  }
}
export namespace ChoccyAdmin.Server.Controllers {
  export class JwtController {
    async getToken(model: ChoccyAdmin.Server.Controllers.JwtController.RequestModel): Promise<Ajax.JSend<ChoccyAdmin.Server.Controllers.JwtController.TokenModel>> {
      return fetch(`/open/api/Jwt/GetToken`, {
        method: 'POST',
        headers: new Headers({
          'Content-Type': 'application/json'
        }),
        body: JSON.stringify(model)
      }).then(async response => {
        if (typeof $ts_handle_response !== 'undefined') {
          return await $ts_handle_response(response) as any;
        }
        return await response.json() as Ajax.JSend<ChoccyAdmin.Server.Controllers.JwtController.TokenModel>;
      }).catch(reason => {
        if (typeof $ts_handle_error !== 'undefined') {
          return new Promise((_, reject) => reject($ts_handle_error(reason)));
        }
        return new Promise((_, reject) => reject(reason));
      });
    }
  }
  export class UserController {
    async profile(): Promise<ChoccyAdmin.Server.Controllers.UserController.UserProfile> {
      return fetch(`/User/Profile`, {
        method: 'GET'
      }).then(async response => {
        if (typeof $ts_handle_response !== 'undefined') {
          return await $ts_handle_response(response) as any;
        }
        return await response.json() as ChoccyAdmin.Server.Controllers.UserController.UserProfile;
      }).catch(reason => {
        if (typeof $ts_handle_error !== 'undefined') {
          return new Promise((_, reject) => reject($ts_handle_error(reason)));
        }
        return new Promise((_, reject) => reject(reason));
      });
    }
  }
}
export namespace ChoccyAdmin.Server.App.Controllers {
  export class HomeController {
    async index(): Promise<ChoccyAdmin.Server.App.Controllers.HomeController.HomeResponse> {
      return fetch(`/api/Home`, {
        method: 'GET'
      }).then(async response => {
        if (typeof $ts_handle_response !== 'undefined') {
          return await $ts_handle_response(response) as any;
        }
        return await response.json() as ChoccyAdmin.Server.App.Controllers.HomeController.HomeResponse;
      }).catch(reason => {
        if (typeof $ts_handle_error !== 'undefined') {
          return new Promise((_, reject) => reject($ts_handle_error(reason)));
        }
        return new Promise((_, reject) => reject(reason));
      });
    }
  }
  export class WeatherAdminController {
    async get(): Promise<Array<ChoccyAdmin.Server.App.Models.WeatherForecast>> {
      return fetch(`/api/WeatherAdmin`, {
        method: 'GET'
      }).then(async response => {
        if (typeof $ts_handle_response !== 'undefined') {
          return await $ts_handle_response(response) as any;
        }
        return await response.json() as Array<ChoccyAdmin.Server.App.Models.WeatherForecast>;
      }).catch(reason => {
        if (typeof $ts_handle_error !== 'undefined') {
          return new Promise((_, reject) => reject($ts_handle_error(reason)));
        }
        return new Promise((_, reject) => reject(reason));
      });
    }
    async index(): Promise<string | undefined> {
      return fetch(`/api/WeatherAdmin`, {
        method: 'GET'
      }).then(async response => {
        if (typeof $ts_handle_response !== 'undefined') {
          return await $ts_handle_response(response) as any;
        }
        return await response.json() as string | undefined;
      }).catch(reason => {
        if (typeof $ts_handle_error !== 'undefined') {
          return new Promise((_, reject) => reject($ts_handle_error(reason)));
        }
        return new Promise((_, reject) => reject(reason));
      });
    }
  }
  export class WeatherAnyController {
    async get(): Promise<Array<ChoccyAdmin.Server.App.Models.WeatherForecast>> {
      return fetch(`/api/WeatherAny`, {
        method: 'GET'
      }).then(async response => {
        if (typeof $ts_handle_response !== 'undefined') {
          return await $ts_handle_response(response) as any;
        }
        return await response.json() as Array<ChoccyAdmin.Server.App.Models.WeatherForecast>;
      }).catch(reason => {
        if (typeof $ts_handle_error !== 'undefined') {
          return new Promise((_, reject) => reject($ts_handle_error(reason)));
        }
        return new Promise((_, reject) => reject(reason));
      });
    }
    async index(): Promise<string | undefined> {
      return fetch(`/api/WeatherAny`, {
        method: 'GET'
      }).then(async response => {
        if (typeof $ts_handle_response !== 'undefined') {
          return await $ts_handle_response(response) as any;
        }
        return await response.json() as string | undefined;
      }).catch(reason => {
        if (typeof $ts_handle_error !== 'undefined') {
          return new Promise((_, reject) => reject($ts_handle_error(reason)));
        }
        return new Promise((_, reject) => reject(reason));
      });
    }
  }
  export class WeatherUserController {
    async get(): Promise<Array<ChoccyAdmin.Server.App.Models.WeatherForecast>> {
      return fetch(`/api/WeatherUser`, {
        method: 'GET'
      }).then(async response => {
        if (typeof $ts_handle_response !== 'undefined') {
          return await $ts_handle_response(response) as any;
        }
        return await response.json() as Array<ChoccyAdmin.Server.App.Models.WeatherForecast>;
      }).catch(reason => {
        if (typeof $ts_handle_error !== 'undefined') {
          return new Promise((_, reject) => reject($ts_handle_error(reason)));
        }
        return new Promise((_, reject) => reject(reason));
      });
    }
    async index(): Promise<string | undefined> {
      return fetch(`/api/WeatherUser`, {
        method: 'GET'
      }).then(async response => {
        if (typeof $ts_handle_response !== 'undefined') {
          return await $ts_handle_response(response) as any;
        }
        return await response.json() as string | undefined;
      }).catch(reason => {
        if (typeof $ts_handle_error !== 'undefined') {
          return new Promise((_, reject) => reject($ts_handle_error(reason)));
        }
        return new Promise((_, reject) => reject(reason));
      });
    }
  }
}
export namespace ChoccyAdmin.Server.App.Models {
  export interface WeatherForecast {
    date: Date;
    temperatureC: number;
    temperatureF: number;
    summary?: string;
  }
}
export namespace ChoccyAdmin.Server.Controllers.AccountController {
  export enum LoginError {
    Unknown = 0,
    Fail = 1
  }
}
export namespace ChoccyAdmin.Server.Controllers.JwtController {
  export interface RequestModel {
    userName?: string;
    password?: string;
  }
  export interface TokenModel {
    token?: string;
    bearer?: string;
    expires: Date;
  }
}
export namespace ChoccyAdmin.Server.Controllers.UserController {
  export interface UserProfile {
    userName: string;
    roles: Array<string | undefined> | undefined;
  }
}
export namespace ChoccyAdmin.Server.App.Controllers.HomeController {
  export interface HomeResponse {
    name?: string;
  }
}